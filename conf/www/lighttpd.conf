# lighttpd configuration file
############ Options you really have to take care of ####################

#server.name = "mozilla-taiwan.org"
server.name = "moztw.org"
server.event-handler = "freebsd-kqueue"
server.max-fds = 2048

# Server Directory Configuration
server.document-root = "/home/moztw/htdocs/"
server.errorlog      = "/home/moztw/log/raw/www/error.log"
accesslog.filename   = "/home/moztw/log/raw/www/access.log"
#accesslog.filename = "|/usr/local/sbin/cronolog --period='1 day' /home/moztw/log/raw/www/access.%Y%m%d.log"

## modules to load
# at least mod_access and mod_accesslog should be loaded
server.modules              = (
                                "mod_access",
                               "mod_rewrite",
                               "mod_status",
                               "mod_fastcgi",
                               "mod_compress",
                               "mod_ssi",
                               "mod_redirect",
#                               "mod_alias",
#                               "mod_setenv",
#                               "mod_auth",
#                               "mod_proxy",
#                               "mod_userdir",
#                               "mod_cgi",
#                               "mod_usertrack",
#                               "mod_expire",
#                               "mod_secdownload",
                                "mod_accesslog" )


# files to check for if .../ is requested
server.indexfiles           = ( 
    "index.html", "index.htm", "index.shtml", "index.php" )

# mimetype mapping
mimetype.assign             = (
  ".pdf"          =>      "application/pdf",
  ".sig"          =>      "application/pgp-signature",
  ".spl"          =>      "application/futuresplash",
  ".class"        =>      "application/octet-stream",
  ".ps"           =>      "application/postscript",
  ".torrent"      =>      "application/x-bittorrent",
  ".dvi"          =>      "application/x-dvi",
  ".gz"           =>      "application/x-gzip",
  ".pac"          =>      "application/x-ns-proxy-autoconfig",
  ".swf"          =>      "application/x-shockwave-flash",
  ".tar.gz"       =>      "application/x-tgz",
  ".tgz"          =>      "application/x-tgz",
  ".tar"          =>      "application/x-tar",
  ".zip"          =>      "application/zip",
  ".rar"          =>      "application/x-rar",
  ".jar"          =>      "application/zip",
  ".xpi"          =>      "application/zip",
  ".mp3"          =>      "audio/mpeg",
  ".m3u"          =>      "audio/x-mpegurl",
  ".wma"          =>      "audio/x-ms-wma",
  ".wax"          =>      "audio/x-ms-wax",
  ".ogg"          =>      "audio/x-wav",
  ".wav"          =>      "audio/x-wav",
  ".gif"          =>      "image/gif",
  ".jpg"          =>      "image/jpeg",
  ".jpeg"         =>      "image/jpeg",
  ".png"          =>      "image/png",
  ".xbm"          =>      "image/x-xbitmap",
  ".xpm"          =>      "image/x-xpixmap",
  ".xwd"          =>      "image/x-xwindowdump",
  ".css"          =>      "text/css",
  ".html"         =>      "text/html",
  ".htm"          =>      "text/html",
  ".js"           =>      "text/javascript",
  ".asc"          =>      "text/plain",
  ".c"            =>      "text/plain",
  ".conf"         =>      "text/plain",
  ".text"         =>      "text/plain",
  ".txt"          =>      "text/plain",
  ".dtd"          =>      "text/xml",
  ".xml"          =>      "text/xml",
  ".mpeg"         =>      "video/mpeg",
  ".mpg"          =>      "video/mpeg",
  ".mov"          =>      "video/quicktime",
  ".qt"           =>      "video/quicktime",
  ".avi"          =>      "video/x-msvideo",
  ".asf"          =>      "video/x-ms-asf",
  ".asx"          =>      "video/x-ms-asf",
  ".wmv"          =>      "video/x-ms-wmv",
  ".bz2"          =>      "application/x-bzip",
  ".tbz"          =>      "application/x-bzip-compressed-tar",
  ".tar.bz2"      =>      "application/x-bzip-compressed-tar"
 )

# Use the "Content-Type" extended attribute to obtain mime type if possible
#mimetypes.use-xattr        = "enable"

## send a different Server: header
## be nice and keep it at lighttpd
#server.tag                 = "lighttpd"

## deny access the file-extensions
#
# ~    is for backupfiles from vi, emacs, joe, ...
# .inc is often used for code includes which should in general not be part
#      of the document-root
url.access-deny             = ( "~", ".inc")


######### Options that are good to be but not neccesary to be changed #######

## error-handler for status 404
#server.error-handler-404   = "/error-handler.html"
#server.error-handler-404   = "/error-handler.php"
server.error-handler-404   = "/404.shtml"
#server.error-handler-500   = "/500.shtml"

## to help the rc.scripts
server.pid-file            = "/var/run/lighttpd.pid"

##
## Format: <errorfile-prefix><status-code>.html
## -> ..../status-404.html for 'File not found'
#server.errorfile-prefix    = "/home/weigon/projects/lighttpd/doc/status-"

## virtual directory listings
#server.dir-listing         = "enable"
#dir-listing.external-css   = "list.css"

## enable debugging
#debug.log-request-header   = "enable"
#debug.log-response-header  = "enable"
#debug.log-request-handling = "enable"
#debug.log-file-not-found   = "enable"

### only root can use these options
#
# chroot() to directory (default: no chroot() )
#server.chroot              = "/"

## change uid to <uid> (default: don't care)
server.username            = "www"

## change uid to <uid> (default: don't care)
server.groupname           = "www"

#### compress module
compress.cache-dir         = "/tmp/www/cache/compress/"
compress.filetype          = ("text/plain", "text/html", "text/css", "text/javascript")

#### proxy module
## read proxy.txt for more info
#proxy.server               = ( ".php" =>
#                               ( "localhost" =>
#                                 (
#                                   "host" => "192.168.0.101",
#                                   "port" => 80
#                                 )
#                               )
#                             )

#### fastcgi module
## read fastcgi.txt for more info
fastcgi.server             = ( ".php" =>
                               ( "localhost" =>
                                 (
				   # vv adaptive disabled in current version
				   #"min-procs" => 2,
				   #"max-load-per-proc" => 25,

				   # vv server will always use this
				   "max-procs" => 4,
				   "idle-timeout" => 45,
				   "bin-environment" => (
				       "PHP_FCGI_CHILDREN" => "8",
				       "PHP_FCGI_MAX_REQUESTS" => "2500" 
				       ),
                                   "socket" => "/tmp/php-fastcgi.socket",
                                   "bin-path" => "/usr/local/bin/php"
                                 )
                               )
                            )

#### CGI module
#cgi.assign                 = ( ".pl"  => "/usr/bin/perl",
#                               ".cgi" => "/usr/bin/perl" )
#

#### SSL engine
#ssl.engine                 = "enable"
#ssl.pemfile                = "server.pem"

#### status module
status.status-url          = "/server-status"
#status.config-url          = "/server-config"

#### auth module
## read authentification.txt for more info
#auth.backend               = "plain"
#auth.backend.plain.userfile = "lighttpd.user"
#auth.backend.plain.groupfile = "lighttpd.group"

#auth.require               = ( "/server-status" =>
#                               (
#                                 "method"  => "digest",
#                                 "realm"   => "download archiv",
#                                 "require" => "group=www|user=jan|host=192.168.2.10"
#                               ),
#                               "/server-info" =>
#                               (
#                                 "method"  => "digest",
#                                 "realm"   => "download archiv",
#                                 "require" => "group=www|user=jan|host=192.168.2.10"
#                               )
#                             )

#### url handling modules (rewrite, redirect, access)
#url.rewrite                = ( "^/$"             => "/server-status" )
#url.redirect               = ( "^/wishlist/(.+)" => "http://www.123.org/$1" )

#

#### expire module
#expire.url                 = ( "/buggy/" => "access 2 hours", "/asdhas/" => "access plus 1 seconds 2 minutes")

#### ssi
ssi.extension              = ( ".shtml" )

#### setenv
#setenv.add-request-header  = ( "TRAV_ENV" => "mysql://user@host/db" )
#setenv.add-response-header = ( "X-Secret-Message" => "42" )

####  PreventMalicious Trojans
url.redirect = ( 
    "\.svn\/" => "http://www.moztw.org/", 
    "includes\/" => "http://www.moztw.org/", 
    "maintenance\/" => "http://www.moztw.org/", 
    # maybe we should synchronize var directory names in future
    "images\/.*\.php" => "http://www.moztw.org/",
    "albums\/.*\.php" => "http://www.moztw.org/",
    "files\/.*\.php" => "http://www.moztw.org/",
)

#### Virtual Hosts
$HTTP["host"] =~ "^wiki" {
    server.name = "wiki.moztw.org"
    server.document-root = "/home/moztw/wiki/"
    url.rewrite = ( "^/(page|index.php)/(.*)$" => "/index.php?title=$2" )
}

$HTTP["host"] =~ "^photos" {
    server.name = "photos.moztw.org"
    server.document-root = "/home/moztw/photos/"
}

$HTTP["host"] =~ "^forum" {
    server.name = "forum.moztw.org"
    server.document-root = "/home/moztw/forum/"
#    server.error-handler-404   = "/404.html"
#    server.error-handler-500   = "/500.html"
}


# vim:sw=4
